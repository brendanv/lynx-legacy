# Generated by Django 5.0 on 2024-02-06 17:29

import autoslug.fields
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BulkUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tag_slug', models.CharField(blank=True, max_length=50, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_fetched_at', models.DateTimeField(blank=True, null=True)),
                ('etag', models.CharField(blank=True, max_length=1000)),
                ('modified', models.CharField(blank=True, max_length=1000)),
                ('feed_url', models.URLField(max_length=2000)),
                ('feed_name', models.CharField(max_length=1000)),
                ('feed_description', models.TextField(blank=True)),
                ('feed_image_url', models.URLField(blank=True, max_length=2000)),
                ('is_deleted', models.BooleanField(default=False)),
                ('auto_add_feed_items_to_library', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('added_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_viewed_at', models.DateTimeField(blank=True, null=True)),
                ('original_url', models.URLField(max_length=2000)),
                ('cleaned_url', models.URLField(max_length=2000)),
                ('hostname', models.CharField(blank=True, max_length=500)),
                ('article_date', models.DateField(blank=True)),
                ('author', models.CharField(blank=True, max_length=255)),
                ('title', models.CharField(blank=True, max_length=500)),
                ('excerpt', models.TextField(blank=True)),
                ('header_image_url', models.URLField(blank=True, max_length=2000)),
                ('article_html', models.TextField(blank=True)),
                ('raw_text_content', models.TextField(blank=True)),
                ('full_page_html', models.TextField(blank=True)),
                ('summary', models.TextField(blank=True)),
                ('read_time_seconds', models.IntegerField(blank=True)),
                ('read_time_display', models.CharField(blank=True, max_length=100)),
                ('created_from_bulk_upload', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lynx.bulkupload')),
                ('created_from_feed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lynx.feed')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-added_at'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=50)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.TextField()),
                ('hostname', models.CharField(blank=True, max_length=500)),
                ('url', models.URLField(blank=True, max_length=2000)),
                ('link_title', models.TextField(blank=True)),
                ('link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lynx.link')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, to='lynx.tag')),
            ],
            options={
                'ordering': ['-saved_at'],
            },
        ),
        migrations.AddField(
            model_name='link',
            name='tags',
            field=models.ManyToManyField(blank=True, to='lynx.tag'),
        ),
        migrations.CreateModel(
            name='UserCookie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cookie_name', models.CharField(max_length=1000)),
                ('cookie_value', models.CharField(max_length=2000)),
                ('cookie_domain', models.CharField(max_length=1000)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('openai_api_key', models.CharField(blank=True, max_length=255)),
                ('lynx_api_key', models.CharField(blank=True, max_length=255)),
                ('headers_for_scraping', models.JSONField(default=dict)),
                ('headers_updated_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FeedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=1000)),
                ('pub_date', models.DateTimeField(blank=True, null=True)),
                ('guid', models.CharField(blank=True, max_length=1000)),
                ('description', models.TextField(blank=True)),
                ('url', models.URLField(max_length=2000)),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', related_query_name='item', to='lynx.feed')),
                ('saved_as_link', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_from_feed_item', related_query_name='created_from_feed_item', to='lynx.link')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('feed', 'guid')},
            },
        ),
    ]

name: Lynx CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10"]

    services:
      # https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers#running-jobs-directly-on-the-runner-machine
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Run Tests
        run: |
          poetry run python manage.py test lynx/tests/
        env:
          SECRET_KEY: ghtestkey
          DEBUG: True
          CSRF_TRUSTED_ORIGINS: "http://localhost"
          ALLOWED_HOSTS: "*"
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: postgres
          PGPORT: 5432
          PGDATABASE: postgres
